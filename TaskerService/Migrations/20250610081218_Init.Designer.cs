// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskerService.DbContexts;

#nullable disable

namespace TaskerService.Migrations
{
    [DbContext(typeof(TaskerDbContext))]
    [Migration("20250610081218_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.30")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TaskerService.Entities.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BookingStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ScheduleTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaskerId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("BookingId");

                    b.HasIndex("TaskerId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("TaskerService.Entities.Tasker", b =>
                {
                    b.Property<int>("TaskerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskerId"), 1L, 1);

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompletedTasks")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("RatingAverage")
                        .HasColumnType("real");

                    b.Property<int>("TotalRatings")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TaskerId");

                    b.ToTable("Taskers");
                });

            modelBuilder.Entity("TaskerService.Entities.TaskerCategory", b =>
                {
                    b.Property<int>("TaskerId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("TaskerId", "CategoryId");

                    b.ToTable("TaskerCategories");
                });

            modelBuilder.Entity("TaskerService.Entities.Booking", b =>
                {
                    b.HasOne("TaskerService.Entities.Tasker", "Tasker")
                        .WithMany()
                        .HasForeignKey("TaskerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tasker");
                });

            modelBuilder.Entity("TaskerService.Entities.TaskerCategory", b =>
                {
                    b.HasOne("TaskerService.Entities.Tasker", "Tasker")
                        .WithMany("TaskerCategories")
                        .HasForeignKey("TaskerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tasker");
                });

            modelBuilder.Entity("TaskerService.Entities.Tasker", b =>
                {
                    b.Navigation("TaskerCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
