// <auto-generated />
using System;
using CatalogService.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CatalogService.Migrations
{
    [DbContext(typeof(CatalogDbContext))]
    [Migration("20250614165825_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.30")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CatalogService.Entities.AddonService", b =>
                {
                    b.Property<int>("AddonServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddonServiceId"), 1L, 1);

                    b.Property<decimal>("DurationHours")
                        .HasColumnType("decimal(3,1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("AddonServiceId");

                    b.ToTable("AddonServices");
                });

            modelBuilder.Entity("CatalogService.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("CatalogService.Entities.DurationConfig", b =>
                {
                    b.Property<int>("DurationConfigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DurationConfigId"), 1L, 1);

                    b.Property<int>("DurationHours")
                        .HasColumnType("int");

                    b.Property<int?>("MaxAreaSqm")
                        .HasColumnType("int");

                    b.Property<int?>("MaxRooms")
                        .HasColumnType("int");

                    b.Property<decimal>("PriceMultiplier")
                        .HasColumnType("decimal(3,2)");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("DurationConfigId");

                    b.HasIndex("ServiceId");

                    b.ToTable("DurationConfigs");
                });

            modelBuilder.Entity("CatalogService.Entities.PremiumService", b =>
                {
                    b.Property<int>("PremiumServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PremiumServiceId"), 1L, 1);

                    b.Property<decimal>("AdditionalPrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<bool>("IsPercentage")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("PremiumServiceId");

                    b.HasIndex("ServiceId");

                    b.ToTable("PremiumServices");
                });

            modelBuilder.Entity("CatalogService.Entities.Service", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceId"), 1L, 1);

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaskDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ServiceId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("CatalogService.Entities.ServiceOption", b =>
                {
                    b.Property<int>("ServiceOptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceOptionId"), 1L, 1);

                    b.Property<bool>("IsPercentage")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("OptionType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("PriceAdjustment")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("ServiceOptionId");

                    b.ToTable("ServiceOptions");
                });

            modelBuilder.Entity("CatalogService.Entities.DurationConfig", b =>
                {
                    b.HasOne("CatalogService.Entities.Service", null)
                        .WithMany("DurationConfigs")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CatalogService.Entities.PremiumService", b =>
                {
                    b.HasOne("CatalogService.Entities.Service", null)
                        .WithMany("PremiumServices")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CatalogService.Entities.Service", b =>
                {
                    b.HasOne("CatalogService.Entities.Category", "Category")
                        .WithMany("Services")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CatalogService.Entities.Category", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("CatalogService.Entities.Service", b =>
                {
                    b.Navigation("DurationConfigs");

                    b.Navigation("PremiumServices");
                });
#pragma warning restore 612, 618
        }
    }
}
